/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domain.Character;
import domain.Fast;
import domain.Maze;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.Timer;

/**
 *
 * @author usuario
 */
public class NormalMazePanel extends javax.swing.JPanel {

    Maze myMaze;
    ArrayList<Character> characterList;
    
    Timer timer;
    
    int rectWidth, rectHeight;
    int contador;
    Fast fast;
    
    public NormalMazePanel() {
        initComponents();
        myMaze = Maze.getInstance();
        setLocation(200, 200);
        characterList = new ArrayList<>();
        this.setOpaque(false);
        
        rectWidth = 45;
        rectHeight = 45;
        
        timer = new Timer(0, (ActionEvent ae) -> {
            long time = 1000 / 60;
            long start = System.nanoTime();
            long elapsed = System.nanoTime() - start;
            long wait = time - elapsed / 1000000;
            timer.setDelay((int) wait);

            repaint();

        });

        timer.start();
        
        fast = new Fast(0, 100, myMaze.getNormalMaze());
        
    }
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);  
        
        for (int i = 0; i <myMaze.getNormalMaze().length; i++) {
            for (int j = 0; j <myMaze.getNormalMaze()[0].length; j++) {
                if(myMaze.getNormalMaze()[i][j] == 1){
                    g.setColor(new Color(33,147,84));
                    g.fillRect(rectWidth*j, rectHeight*i, rectWidth, rectHeight);
                }
                else{
                    g.setColor(new Color(83,86,85));
                    g.fillRect(rectWidth*j, rectHeight*i, rectWidth, rectHeight);
                }
            }
        }
        
        //Esto es para iniciar lo bloques
        if (contador == 0) {
            fast.setBlockHeight(rectHeight);
            fast.setBlockWidth(rectWidth);
            fast.start();
        }
        
        contador++;
        
        drawCharacters(g);
        
    } //fin metodo paintComponent
    
    private void drawCharacters(Graphics g) {
        //no me pregunten quÃ© es esto porque no tengo idea :D
//        characterList.forEach((characterList1) -> {
//            g.drawImage(characterList1.getImage(), characterList1.getX(), characterList1.getY(), this);
//        });
        
        g.drawImage(fast.getImage(), fast.getX(), fast.getY(), this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(1045, 610));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
